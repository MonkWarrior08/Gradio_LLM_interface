from openai import OpenAI
from dotenv import load_dotenv
import os


# Load environment variables from a .env file
load_dotenv()

# Initialize the OpenAI client using the provided API key.
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

def chat_fn(message, history, model="gpt-4o"):
    """
    Processes a chat message using the OpenAI API with conversation history as a list of dictionaries.
    
    Args:
        message (str): The current user message.
        history (list): The conversation history as a list of dictionaries. Each dictionary should contain 
                        a "role" (e.g., "user" or "assistant") and a "content" key.
        model (str): The OpenAI model to use (e.g., "gpt-4o", "gpt-3.5-turbo").
    
    Returns:
        str: The assistant's reply generated by the API.
    """
    if history is None:
        history = []
    
    # Build the conversation starting with a system prompt for proper context.
    conversation = [{"role": "system", "content": "You are a helpful assistant."}]
    conversation.extend(history)
    
    # Append the new user message.
    conversation.append({"role": "user", "content": message})
    
    # Call the OpenAI API with the full conversation context.
    response = client.chat.completions.create(
        model=model,
        messages=conversation
    )
    
    # Extract the assistant's reply from the API response.
    assistant_reply = response.choices[0].message.content
    return assistant_reply
